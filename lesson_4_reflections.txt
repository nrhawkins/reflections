When would you want to create a remote repository rather than keeping all your work local?
    -want to share code with others
    -want to work on multiple computers and don't have remote access to the local work
    -want to be able to view the code online using a browser
    -want others to be able to the view the code online using a browser
    
Why might you want to always pull changes manually rather than having Git
 automatically stay up-to-date with your remote repository?
    -might pull over a file you're working on

 
Forking a repository

fork = a clone that github makes on its own machines

side effects = 
    github keeps track of the number of people who have made forks on your repository
    the forks all link back to the original
    makes it easier to suggest changes back to the original repository

Caroline forks a copy to her account, called recipes
Each can clone a version from the forked version

git clone https://github.com/nrhawkins/recipes.git

git remote -v (see that the remote origin has been automatically created)

Settings -> Collaborators -> add Sarah as a collaborator


Describe the differences between forks, clones, and branches. When would you use one instead of another?
    forks - get a copy of a repo on github to make changes, when you don't have permission to change the orig repo
    clones - get a repo from github
    branches - create on local repository to work on a new feature


Collaboration Conflicts

locally modify chili recipe
git diff (to see changes made)
git add
git commit


git fetch origin (updates local origin/master) (creates new branch)
can use
git log origin/master (and ... )
git diff origin/master master (to see what changes were introduced)
now
git merge master origin/master
got merge conflict
i.e. merge conflict in chili-recipe
open the file to resolve it.
then
git add
git commit

same as
git pull origin master
if run that now, 
master Already up-to-date


git pull origin master
conflict with chili-recipe
notepad chili-recipe to resolve
git add chili-recipe
git commit chili-recipe
git push origin master


Fast-forward Merges
a and b, is a an ancestor of b?


What is the benefit of having a copy of the last known state of the remote stored locally?
    can use git diff and git log to examine the changes


Make change branch
Push change branch
When ready, merge master and change branches

git branch different-oil
git checkout different-oil
modify cake recipe to use canola oil instead of vegetable oil
git add 
git commit
git push origin different-oil

Pull request

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
    make notes about files changed
    easier: don't have to learn git, don't have to worry about how git merges, 
    harder: could become cumbersome


Incorporating more-oil into Caroline's local repo

git pull origin master
git checkout different-oil
git merge master different-oil
merge conflict in cake-recipe
notepad resolve conflict -> 3/4 cup canola oil
git push origin different-oil

git log -n 1


When would you want to make changes in a separate branch rather than 
directly in master? What benefits does each approach have?
    work on a new feature, without breaking master
    w/o branch: simpler
    w/branch: protected from breaking master

locally, already have a link to a remote, the fork

can make a link to the original repo, called upstream

upstream/master, can merge this with your change branch


git pull upstream/master (merge chocolate sprinkler and stop drop and roll)

merge master into change branch

push change and master to the fork (

Instructions:
--------------
git remote add upstream https://github.com/udacity/create-your-own-adventure.git
git checkout master
git pull upstream master

git log

git checkout stop-drop-roll
git merge master stop-drop-roll

notepad fire.md

git add fire.md
git commit

git push origin stop-drop-roll

git checkout master

git push origin master















































     




































































