Lesson 1

git log
git clone
git checkout
git diff

Lesson 2

git init
    creates .git directory

git status
    on master branch
    
Q: what happens when you initialize a new repository? Why do you need to do it?
    a new directory gets created, called .git
    need to do it to start tracking files

Q: what value does the staging area offer?
    allows a group commit
    provides a two-step, capable of being edited, process

git add
git status

git commit (opens up editor)
git commit -m "Commit Message"

git diff "working directory" "staging area"
git diff --staged "staging area" commit1
git diff commit1 commit2

git checkout master

Q: how use staging area to make sure have one logical change per commit
    use git diff to compare working directory to staging area

Branches (= labels for commits)

fix bug -> new feature -> update docs -> italian (Italian version)
                                      -> master (fix)
                                      -> exp (experimental feature)

-> creating and checking out branches

git branch (shows current branches)
git branch easy-mode (creates new branch easy-mode)
* indicates branch checked-out
git checkout easy-mode
git branch

Q: how would branches help?
    want to experiment with an approach, may never merge it with the main
 
Interview: context, new piece of work, sharing publicly 
    master: production quality branch, never breaks, always works
    development: active work taking place
    experimental: not production quality yet
    
    good also for collaborating with yourself: feature branch

New Feature: Coins branch

git checkout coins (remote branch, since Sarah created it, Caroline using it)

git log --graph --oneline master coins

git log -> shows parent commits

Reachability 

git checkout -b new_branch_name

Q: how do the diagrams help you visualize the branch structure?
    the diagrams help to see the chain of commits on each branch

Merging Two Branches
    Merge coins into the master 
    if delete coins branch before merging, will be abandoning that chain of commits
    Commands:
    git branch (make sure on master branch)
    git merge master coins                
    editor pops up for merge commit (comes with default message)
    git log (see merge commit at top)
        
    git diff 2 commits (one is not the parent of the other)
    git show (see changes compared to parent)
    
    git branch -d coins (deletes the label, the commits are still reachable from the master branch)

Q: What is the result of merging two branches?  Why represent it in the diagram the way we do?
    lines added are kept in the final file, lines removed are not               

Automatic merge is not always possible
    

















    
   
































 







    
